//<3 For battleguard for helping me terminously on how to properly script>
package PotatoePicker;

import org.powerbot.core.script.job.state.Node;
import org.powerbot.game.api.methods.Calculations;
import org.powerbot.game.api.methods.Walking;
import org.powerbot.game.api.methods.interactive.Players;
import org.powerbot.game.api.methods.node.SceneEntities;
import org.powerbot.game.api.methods.tab.Inventory;
import org.powerbot.game.api.wrappers.Area;
import org.powerbot.game.api.wrappers.Tile;
import org.powerbot.game.api.wrappers.node.SceneObject;

import KillerPro.Util.Methods;

public class Gate extends Node {

  public static final Area POTATO_AREA = new Area(new Tile(3139, 3267, 0), new Tile(3158, 3292, 0));

	private static final Tile OUTSIDE_TILE = new Tile(3136, 3293, 0);	
	private static final Tile INSIDE_TILE = new Tile(3148, 3282, 0);

	public static final int GATE_CLOSED_ID = 45208;
	public static final int GATE_OPEN_ID = 45209;

	@Override
	public boolean activate() {

		if(Inventory.isFull() && POTATO_AREA.contains(Players.getLocal())) {
			return true;
		}


		final SceneObject gate = SceneEntities.getNearest(GATE_OPEN_ID, GATE_CLOSED_ID);
		return gate != null && Calculations.distanceTo(gate) < 5;
	}

	@Override
	public void execute() {	
		final SceneObject gate = SceneEntities.getNearest(GATE_OPEN_ID, GATE_CLOSED_ID);
		if(gate != null) {
			if(gate.getId() == GATE_CLOSED_ID) { 
				if(Methods.isOnScreen(gate)) {
					gate.interact("Open");
				} else {

					Walking.walk(gate.getLocation().derive(0, Inventory.isFull() ? -4 : 4));	//<=== Much love to battleguard for this tenary method he showed me. <3 			
				}
			} else {

				Walking.walk(Inventory.isFull() ? OUTSIDE_TILE : INSIDE_TILE);


			}
		}		
	}


}
