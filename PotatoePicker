package PotatoePicker;

import java.awt.Color;
import java.awt.Graphics;

import org.powerbot.core.event.listeners.PaintListener;
import org.powerbot.core.script.ActiveScript;
import org.powerbot.core.script.job.state.Node;
import org.powerbot.game.api.Manifest;
import org.powerbot.game.api.wrappers.Area;
import org.powerbot.game.api.wrappers.Tile;



@Manifest(authors = { "Nations_collapse" }, name = "Potatoe Picker Upper", description = "Loots Potatoes for f2p CASH! [Version 0.1]", version =0.01) 
public class PotatoePiker extends ActiveScript implements PaintListener {

  private static final Node[] jobs = { new Gate(), new FullInventory(),new ToPotatoes(),new Picker()};
	public static String CurrentJob = "Nothing";

	@Override
	public int loop() {			
		for (Node job : jobs) {
			if(job.activate()) {
				CurrentJob = job.getClass().getName();

				System.out.println("Current Job: " + CurrentJob);
				job.execute();
				return 300;
			}
		}
		CurrentJob = "Nothing";
		return 100;
	}

	public void onRepaint(Graphics g) {
		try {
			drawArea(g, ToPotatoes.InsidePotatoeZone);
			drawLine(g, "Current Job: " + CurrentJob);

		} catch (Exception e) {
			e.printStackTrace();
		}		
	}

	public static void drawArea(Graphics g, Area area) throws Exception {
		drawTiles(g, area.getTileArray());			
	}

	private static final Color RED = new Color(255, 0, 0 ,160);

	public static void drawTiles(Graphics g, Tile[] tiles) throws Exception {
		g.setColor(RED);
		for (Tile tile : tiles) {
			tile.draw(g);			
		}
	}


	public static void drawLine(Graphics g, String text) throws Exception {
		g.setColor(Color.BLACK);
		g.fillRect(0, 20, 100, 30);		
		g.setColor(Color.WHITE);
		g.drawString(text, 10, 10);
	}
}
